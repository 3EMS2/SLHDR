#!/usr/bin/env bash

cxx=g++

prefix="/usr/local"

log() {
   printf "$*\n"
}

die() {
   printf "\e[0;31m$*\e[0m\n"
   exit 1
}

dep_list="
 SLHDRCommon
 SLHDRPostprocessor
"

show_help() {
    cat <<EOF
Usage: configure [options]
Options: [defaults in brackets after descriptions]

Options:
  --help                   print this message
  --cxx=<compiler>         define used compiler[${cxx}]

  --ssedir=DIR             path to slhdr library SSE version
  --avxdir=DIR             path to slhdr library AVX version

  --prefix=PREFIX          install in PREFIX [$prefix_default]
  --libdir=LIBDIR          install library in LIBDIR [PREFIX/lib]
  --incdir=DIR             install headers in DIR [PREFIX/include]
  --pkgdir=DIR             install pkg-config files in DIR [LIBDIR/pkgconfig]
EOF
  exit 0
}

validate_lib() {
   lib="lib$1.so"
   dir=$2

   [ -f "${dir}/${lib}" ] && log "Found $1 in $2" || return 1

   return 0
}

check_libs_in_dir() {
   lib_list=$1
   dir="$2/lib"
   for lib in $lib_list ; do
       validate_lib "${lib}" "${dir}" || die "${lib} library not found in ${dir}"
   done
}

for opt do
    optval="${opt#*=}"
    case "$opt" in
        --help|-h) show_help
        ;;
        --*dir*)
            optname="${opt%%=*}"
            optname="${optname#--}"
            eval $optname="$optval"
        ;;
        *)
            optname="${opt%%=*}"
            optname="${optname#--}"
            eval $optname='$optval'
        ;;
    esac
done

libdir=${libdir:-${prefix}/lib}
incdir=${incdir:-${prefix}/include}
pkgdir=${pkgdir:-${libdir}/pkgconfig}

[ -z ${ssedir} ] && [ -z ${avxdir} ] && die "No SL-HDR install directory found."

[ ! -z ${ssedir} ] && [ -d ${ssedir} ] && {
  check_libs_in_dir "${dep_list}" ${ssedir}
}

[ ! -z ${avxdir} ] && [ -d ${avxdir} ] && {
  check_libs_in_dir "${dep_list}" ${avxdir}
}

cat > config.mak <<EOF
  CXX= ${cxx}
  CFLAGS= -Wall -O3
  SSE_CFLAGS= -msse4.2
  AVX2_CFLAGS= -mavx2
  SSE_FOLDER=${ssedir}
  AVX2_FOLDER=${avxdir}

	PKGDIR=${pkgdir}
	INCDIR=${incdir}
	LIBDIR=${libdir}
EOF

exit 0
