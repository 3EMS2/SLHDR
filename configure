#!/usr/bin/env bash

cxx=g++

prefix="/usr/local"
suffix=""

log() {
   printf "$*\n"
}

die() {
   printf "\e[0;31m$*\e[0m\n"
   exit 1
}

dep_list="
  SLHDRCommon
  SLHDRPostprocessor
"
header_list="
  SLHDRCommon/SLBuffer.h
  SLHDRCommon/SLCommon.h
  SLHDRCommon/SLError.h
  SLHDRCommon/SLHDRCommonExport.h
  SLHDRCommon/SLSlicedBuffer.h
  SLHDRCommon/SLStreamProperties.h
  SLHDRCommon/SLTypedef.h
  SLHDRCommon/SLTypes.h
  SLHDRPostprocessor/SLHDRPostprocessorExport.h
  SLHDRPostprocessor/SLPostprocessorContext.h
  SLHDRPostprocessor/SLPostprocessorContextProperties.h
"

show_help() {
    cat <<EOF
Usage: configure [options]
Options: [defaults in brackets after descriptions]

Options:
  --help                   print this message
  --cxx=<compiler>         define used compiler[${cxx}]

  --ssedir=DIR             path to slhdr library SSE version
  --avxdir=DIR             path to slhdr library AVX version

  --prefix=PREFIX          install in PREFIX [${prefix}]
  --libdir=LIBDIR          install library in LIBDIR [PREFIX/lib]
  --incdir=DIR             install headers in DIR [PREFIX/include]
  --pkgdir=DIR             install pkg-config files in DIR [LIBDIR/pkgconfig]

  --suffix=SUFFIX          add suffix SUFFIX to generated library name [${suffix}]
EOF
  exit 0
}

validate_lib() {
   lib="lib$1.so"
   dir=$2

   [ -f "${dir}/${lib}" ] && log "Found $1 in $2" || return 1

   return 0
}

check_libs_in_dir() {
   lib_list=$1
   dir="$2/lib"
   for lib in $lib_list ; do
       validate_lib "${lib}" "${dir}" || die "${lib} library not found in ${dir}"
   done
}

validate_header() {
   lib="$1"
   dir=$2

   [ -f "${dir}/${lib}" ] && log "Found $1 in $2" || return 1

   return 0
}

check_headers_in_dir() {
   h_list=$1
   dir="$2/include"
   for h in $h_list ; do
       validate_header "${h}" "${dir}" || die "${h} library not found in ${dir}"
   done
}

append_ldflags_list() {
   lname=$1
   shift

   for elem in $* ; do
      ld_flags="${ld_flags} -l${elem}"
   done

   eval "$lname=\"\$${lname} ${ld_flags}\""
}

for opt do
    optval="${opt#*=}"
    case "$opt" in
        --help|-h) show_help
        ;;
        --*dir*)
            optname="${opt%%=*}"
            optname="${optname#--}"
            eval $optname="$optval"
        ;;
        *)
            optname="${opt%%=*}"
            optname="${optname#--}"
            eval $optname='$optval'
        ;;
    esac
done

libdir=${libdir:-${prefix}/lib}
incdir=${incdir:-${prefix}/include}
pkgdir=${pkgdir:-${libdir}/pkgconfig}

[ -z ${ssedir} ] && [ -z ${avxdir} ] && die "No SL-HDR install directory found."

[ ! -z ${ssedir} ] && [ -d ${ssedir} ] && {
  check_libs_in_dir "${dep_list}" ${ssedir}
  append_ldflags_list SSE_LD_FLAGS ${dep_list}
  check_headers_in_dir "${header_list}" ${ssedir}
}

[ ! -z ${avxdir} ] && [ -d ${avxdir} ] && {
  check_libs_in_dir "${dep_list}" ${avxdir}
  append_ldflags_list AVX_LD_FLAGS ${dep_list}
  check_headers_in_dir "${header_list}" ${avxdir}
}


cat > config.mak <<EOF
CXX= ${cxx}
CFLAGS= -Wall -O3 -fPIC
SSE_CFLAGS= -msse4.2
AVX2_CFLAGS= -mavx2
SSE_FOLDER=${ssedir}
AVX2_FOLDER=${avxdir}
SSE_LD_FLAGS=${SSE_LD_FLAGS}
AVX2_LD_FLAGS=${AVX_LD_FLAGS}
SSE_INCDIR=${ssedir}/include
AVX_INCDIR=${avxdir}/include
SSE_LD_PATH=-L${ssedir}/lib
AVX2_LD_PATH=-L${avxdir}/lib

SUFFIX=${suffix}
PKGDIR=${pkgdir}
INCDIR=${incdir}
LIBDIR=${libdir}

EOF

cat > config.sh << EOF
pkgdir=${pkgdir}
incdir=${incdir}
libdir=${libdir}
deplibs="${AVX_LD_FLAGS}"
slhdr_dir=${avxdir}/lib
rpath="-Wl,-rpath=${libdir}:${avxdir}/lib"
EOF
exit 0
