cmake_minimum_required(VERSION 3.10)

if(WIN32)
    message("This is a Windows System")

    set( CMAKE_VERBOSE_MAKEFILE ON)

    project( slhdrwrapper VERSION 1.0.0 DESCRIPTION "C wrapper to use Interdigital SLHDR library")

    set( SLHDRDIR "" CACHE FILEPATH "Path to SL-HDR libraries")
    set( SLHDR_LIBRARIES "${SLHDRDIR}/lib/x64/Release/" CACHE PATH "Path to SL-HDR libraries")
    set( SLHDR_INCLUDES "${SLHDRDIR}/include/" CACHE PATH "Path to SLHDR Common includes")
    set( PUBLIC_HEADER "${PROJECT_SOURCE_DIR}/pp_wrapper_slhdr.h")
    set( CMAKE_INSTALL_PREFIX "${PROJECT_SOURCE_DIR}")

    # to install libraries
    include(GNUInstallDirs)

    # to create the .dll
    add_library(libslhdrwrapperlib SHARED  pp_wrapper_slhdr.cpp pp_wrapper_slhdr.h)
    add_library(libslhdrwrapperlibStatic STATIC pp_wrapper_slhdr.cpp pp_wrapper_slhdr.h)
    #set_target_properties(
    #    slhdrwrapperlibStatic PROPERTIES
    #    OUTPUT_NAME test
    #    ARCHIVE_OUTPUT_DIRECTORY slhdrwrapperlibStatic
    #)

    # to search SL_HDR libraries
    find_library(SLHDRPOSTPROCESSOR_LIB 
	NAMES
		SLHDRPostprocessor
	PATHS
		"${SLHDR_LIBRARIES}"
	NO_DEFAULT_PATH)

    message("SLHDRPOSTPROCESSOR_LIB is: ${SLHDRPOSTPROCESSOR_LIB}")

    find_library(SLHDRCOMMON_LIB 
	NAMES
	        SLHDRCommon
	PATHS
	        "${SLHDR_LIBRARIES}"
	NO_DEFAULT_PATH)

    message("SLHDRCOMMON_LIB is: ${SLHDRCOMMON_LIB}")

    find_path(SLHDRPOSTPROCESSOR_PATH 
	NAMES 
		SLPostprocessorContext.h
	PATHS
	        "${SLHDR_INCLUDES}/SLHDRPostprocessor"
	NO_DEFAULT_PATH)

    message("SLHDRPOSTPROCESSOR_PATH is: ${SLHDRPOSTPROCESSOR_PATH}")

    find_path(SLHDRCOMMON_PATH
        NAMES
                SLHDRCommonExport.h
	PATHS
	        "${SLHDR_INCLUDES}/SLHDRCommon"
        NO_DEFAULT_PATH)

    message("SLHDRCOMMON_PATH is: ${SLHDRCOMMON_PATH}")

    include_directories("${SLHDRPOSTPROCESSOR_PATH}/..")
    include_directories("${SLHDRCOMMON_PATH}/..")

    # For the linker
    target_link_libraries(libslhdrwrapperlib PRIVATE "${SLHDRPOSTPROCESSOR_LIB}" "${SLHDRCOMMON_LIB}")

    # to be checked

    set(pc_libs_private)
    set(pc_req_private)
    set(pc_req_public)

    configure_file(slhdr_cwrap.pc.in slhdr_cwrap.pc @ONLY)

    install(TARGETS libslhdrwrapperlib RUNTIME DESTINATION bin)
    install(TARGETS libslhdrwrapperlibStatic RUNTIME DESTINATION lib)
    install(FILES ${PUBLIC_HEADER} DESTINATION include)
    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/slhdr_cwrap.pc  DESTINATION lib/pkgconfig)

endif()
